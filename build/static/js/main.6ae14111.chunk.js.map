{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","updatedisplayName","name","updateProfile","displayName","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","onClick","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","nameref","promises","Promise","all","then","catch","finally","defaultValue","placeholder","App","Container","style","minHeight","maxWidth","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ae14111.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: \"AIzaSyCmD5qkiw2H7psvwpb8pLX8kmApKbQ6lHU\",\r\n    authDomain: \"summerinternship-bdf2d.firebaseapp.com\",\r\n    databaseURL: \"https://summerinternship-bdf2d.firebaseapp.com/\",\r\n    projectId: \"summerinternship-bdf2d\",\r\n    storageBucket: \"summerinternship-bdf2d.appspot.com\",\r\n    messagingSenderId: \"545016071750\",\r\n    appId: \"1:545016071750:web:e640c2b9be20b39fd96c47\"\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app\r\n","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatedisplayName(name) {\r\n    //return currentUser.updatedisplayName(name)\r\n    return currentUser.updateProfile({\r\n      displayName: name\r\n    })\r\n  }\r\n\r\n\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n\r\n      setCurrentUser(user)\r\n      //console.log(user.displayName)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword,\r\n    updatedisplayName\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nexport default function Signup() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { signup } = useAuth()\r\n    const [error, setError] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError(\"Passwords do not match\")\r\n        }\r\n\r\n        try {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError(\"Failed to create an account\")\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                            Sign Up\r\n            </Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Already have an account? <Link to=\"/login\">Log In</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { Card, Button, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nexport default function Dashboard() {\r\n    const [error, setError] = useState(\"\")\r\n    const { currentUser, logout } = useAuth()\r\n    const history = useHistory()\r\n\r\n    async function handleLogout() {\r\n        setError(\"\")\r\n\r\n        try {\r\n            await logout()\r\n            history.push(\"/login\")\r\n        } catch {\r\n            setError(\"Failed to log out\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Profile</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <strong>Email:</strong> {currentUser.email}\r\n                    <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\r\n                        Update Profile\r\n          </Link>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Button variant=\"link\" onClick={handleLogout}>\r\n                    Log Out\r\n        </Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login } = useAuth()\r\n    const [error, setError] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError(\"Failed to log in\")\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Log In</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                            Log In\r\n            </Button>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n    const { currentUser } = useAuth()\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n            }}\r\n        ></Route>\r\n    )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default function ForgotPassword() {\r\n    const emailRef = useRef()\r\n    const { resetPassword } = useAuth()\r\n    const [error, setError] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setMessage(\"\")\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage(\"Check your inbox for further instructions\")\r\n        } catch {\r\n            setError(\"Failed to reset password\")\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Password Reset</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    {message && <Alert variant=\"success\">{message}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                            Reset Password\r\n            </Button>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/login\">Login</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nexport default function UpdateProfile() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const nameref = useRef()\r\n\r\n\r\n    const { currentUser, updatePassword, updateEmail } = useAuth()\r\n\r\n    const { updatedisplayName } = useAuth()\r\n    const [error, setError] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError(\"Passwords do not match\")\r\n        }\r\n        const promises = []\r\n        setLoading(true)\r\n        setError(\"\")\r\n\r\n        if (emailRef.current.value !== currentUser.email) {\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n        if (passwordRef.current.value) {\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n        if (nameref.current.value) {\r\n            // console.log(\"nameref\")\r\n\r\n            promises.push(updatedisplayName(nameref.current.value))\r\n        }\r\n\r\n\r\n        Promise.all(promises)\r\n            .then(() => {\r\n                history.push(\"/\")\r\n            })\r\n            .catch(() => {\r\n                setError(\"Failed to update account\")\r\n            })\r\n            .finally(() => {\r\n                setLoading(false)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n\r\n\r\n\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                ref={emailRef}\r\n                                required\r\n                                defaultValue={currentUser.email}\r\n                            />\r\n\r\n                        </Form.Group>\r\n                        <Form.Group id=\"name\">\r\n                            <Form.Label>Place of Birth</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                ref={nameref}\r\n                                placeholder={currentUser.displayName}\r\n                            />\r\n                        </Form.Group>\r\n\r\n\r\n\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                ref={passwordRef}\r\n                                placeholder=\"Leave blank to keep the same\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                ref={passwordConfirmRef}\r\n                                placeholder=\"Leave blank to keep the same\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                        Update\r\n            </Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Link to=\"/\">Cancel</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\"\nimport Signup from \"./Signup\"\nimport { Container } from \"react-bootstrap\"\nimport { AuthProvider } from \"../contexts/AuthContext\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport Dashboard from \"./Dashboard\"\nimport Login from \"./Login\"\nimport PrivateRoute from \"./PrivateRoute\"\nimport ForgotPassword from \"./ForgotPassword\"\nimport UpdateProfile from \"./UpdateProfile\"\n\nfunction App() {\n  return (\n    <Container\n      className=\"d-flex align-items-center justify-content-center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n        <Router>\n          <AuthProvider>\n            <Switch>\n              <PrivateRoute exact path=\"/\" component={Dashboard} />\n              <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n              <Route path=\"/signup\" component={Signup} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/forgot-password\" component={ForgotPassword} />\n            </Switch>\n          </AuthProvider>\n        </Router>\n      </div>\n    </Container>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./components/App\"\nimport  \"bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}